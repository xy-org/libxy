import libxy.crypto.random;
import libxy.binary;
import xytest;

*def sanity~Test() {
    rng := [Global~PlatformRng];
    history: @Uint[32];
    for (i in :history'len) {
        history[i] = rng[Uint];
        for (j in :i) {
            (assert) history[i] != history[j];
        }
    }
}

*def primTypes~Test() {
    rng := [Global~PlatformRng];
    a : Byte = rng[Byte];
    b : Ubyte = rng[Ubyte];
    c : Short = rng[Short];
    d : Ushort = rng[Ushort];
    e : Int = rng[Int];
    f : Long = rng[Long];
    g : Ulong = rng[Ulong];
}

*def readingIntoBuf~Test() {
    rng := [Global~PlatformRng];
    buf := bf"{rng, 12z}";
    (assert) buf.size == 12z;
    "{n1: Uint}{n2: Uint}{n3: Uint}" = buf;
    (assert) n1 != n2;
    (assert) n1 != n3;
}
