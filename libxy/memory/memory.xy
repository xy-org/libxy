import libc~[CLib{headers=@{"stdlib.h", "string.h"}}] in c;
import libxy.slice;

struct Memory {
    addr: Ptr;
    size: Size;
}

*def realloc(mem: mut Memory, size: Size) {
    # TODO check output
    mem.addr = c.realloc(mem.addr, size);
    mem.size = size;
}

*def free(mem: mut Memory) {
    c.free(mem.addr);
    mem.addr = Ptr{};
    mem.size = 0;
}

*def at(mem: Memory, idx: Size) -> Ptr
>> idx < mem.size
{
    return mem.addr + idx;
}

*def set(mem: Memory, interval: SizeInterval, ptr: Ptr)
# >> (
#     (ptr + interval'len) <= (mem + interval.start) |
#     (mem + interval.end) <= ptr
# ) ;; assume no overlap
{
    c.memcpy(mem.addr + interval.start, ptr, interval'len);
}