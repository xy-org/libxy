;; support for flags stored as bitfields

import libxy.bitwise;

;; Flag is a bitmask that is applied to an integer variable
;; Multiple flags can be set on the same value
*struct Flag {
    value: Int;
}

;; Check if the bitmask stored in {flag} is applied to {value}
*def get(value: (Byte, Ubyte, Short, Ushort, Int, Uint), flag: Flag)
    (value'bits && flag.value'to(%value)'bits) == flag.value'to(%value)'bits;

;; Apply the bitmask stored in {flag} to {value}
*def set(value: mut (Ubyte, Int, Uint), flag: Flag, on: Bool) {
    if (on) {value'bits = value'bits || flag.value'to(%value)'bits;}
    else {value'bits = value'bits && !flag.value'to(%value)'bits;}
}
